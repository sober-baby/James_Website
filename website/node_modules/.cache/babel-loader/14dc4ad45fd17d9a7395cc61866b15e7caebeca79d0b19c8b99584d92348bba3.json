{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\James\\\\OneDrive\\\\Desktop\\\\DemoProj\\\\demo\\\\src\\\\components\\\\ChatSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatSection() {\n  _s();\n  const [userInput, setUserInput] = useState(\"\");\n  const [chatResponse, setChatResponse] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Helper function to fetch user's public IP address\n  const fetchUserIP = async () => {\n    try {\n      const ipResponse = await axios.get(\"https://api.ipify.org?format=json\");\n      return ipResponse.data.ip;\n    } catch (error) {\n      console.error(\"Error fetching IP address:\", error);\n      return \"unknown\";\n    }\n  };\n\n  // Function to handle sending the chat to OpenAI and then saving it locally\n  const handleChatSubmit = async () => {\n    if (!userInput.trim()) return;\n    setIsLoading(true);\n    setChatResponse(\"\");\n    try {\n      // First, call the OpenAI API for a response\n      const response = await axios.post(\"https://api.openai.com/v1/chat/completions\", {\n        model: \"gpt-3.5-turbo\",\n        messages: [{\n          role: \"user\",\n          content: userInput\n        }]\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer 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`\n        }\n      });\n\n      // Extract the assistant's reply from the API response\n      const assistantMessage = response.data.choices[0].message.content;\n      setChatResponse(assistantMessage);\n\n      // Get the user's IP address\n      const userIP = await fetchUserIP();\n\n      // Post the user question, assistant's response, and user's IP address to your local backend\n      await axios.post(\"http://localhost:5000/api/chats\", {\n        question: userInput,\n        response: assistantMessage,\n        visitor_id: userIP\n      });\n    } catch (error) {\n      console.error(error);\n      setChatResponse(\"Oops, something went wrong. Try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container my-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-4\",\n      children: \"Talk with JamesGPT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"chatInput\",\n            className: \"form-label\",\n            children: \"Ask me anything:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"chatInput\",\n            placeholder: \"Type your question...\",\n            value: userInput,\n            onChange: e => setUserInput(e.target.value),\n            onKeyDown: e => {\n              if (e.key === \"Enter\") {\n                handleChatSubmit();\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-accent\",\n          onClick: handleChatSubmit,\n          disabled: isLoading,\n          children: isLoading ? \"Thinking...\" : \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), chatResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-3 border rounded\",\n          style: {\n            backgroundColor: \"#fff\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"JamesGPT:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), \" \", chatResponse]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatSection, \"UNWEJCpx5J85ZiSmx9vc6fWg5JM=\");\n_c = ChatSection;\nexport default ChatSection;\nvar _c;\n$RefreshReg$(_c, \"ChatSection\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ChatSection","_s","userInput","setUserInput","chatResponse","setChatResponse","isLoading","setIsLoading","fetchUserIP","ipResponse","get","data","ip","error","console","handleChatSubmit","trim","response","post","model","messages","role","content","headers","Authorization","assistantMessage","choices","message","userIP","question","visitor_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","placeholder","value","onChange","e","target","onKeyDown","key","onClick","disabled","style","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/James/OneDrive/Desktop/DemoProj/demo/src/components/ChatSection.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction ChatSection() {\r\n  const [userInput, setUserInput] = useState(\"\");\r\n  const [chatResponse, setChatResponse] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // Helper function to fetch user's public IP address\r\n  const fetchUserIP = async () => {\r\n    try {\r\n      const ipResponse = await axios.get(\"https://api.ipify.org?format=json\");\r\n      return ipResponse.data.ip;\r\n    } catch (error) {\r\n      console.error(\"Error fetching IP address:\", error);\r\n      return \"unknown\";\r\n    }\r\n  };\r\n\r\n  // Function to handle sending the chat to OpenAI and then saving it locally\r\n  const handleChatSubmit = async () => {\r\n    if (!userInput.trim()) return;\r\n    setIsLoading(true);\r\n    setChatResponse(\"\");\r\n\r\n    try {\r\n      // First, call the OpenAI API for a response\r\n      const response = await axios.post(\r\n        \"https://api.openai.com/v1/chat/completions\",\r\n        {\r\n          model: \"gpt-3.5-turbo\",\r\n          messages: [{ role: \"user\", content: userInput }],\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer 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`\r\n          },\r\n        }\r\n      );\r\n\r\n      // Extract the assistant's reply from the API response\r\n      const assistantMessage = response.data.choices[0].message.content;\r\n      setChatResponse(assistantMessage);\r\n\r\n      // Get the user's IP address\r\n      const userIP = await fetchUserIP();\r\n\r\n      // Post the user question, assistant's response, and user's IP address to your local backend\r\n      await axios.post(\"http://localhost:5000/api/chats\", {\r\n        question: userInput,\r\n        response: assistantMessage,\r\n        visitor_id: userIP,\r\n      });\r\n      \r\n    } catch (error) {\r\n      console.error(error);\r\n      setChatResponse(\"Oops, something went wrong. Try again later.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"container my-5\">\r\n      <h2 className=\"text-center mb-4\">Talk with JamesGPT</h2>\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-6\">\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"chatInput\" className=\"form-label\">\r\n              Ask me anything:\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"chatInput\"\r\n              placeholder=\"Type your question...\"\r\n              value={userInput}\r\n              onChange={(e) => setUserInput(e.target.value)}\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"Enter\") {\r\n                  handleChatSubmit();\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n          <button\r\n            className=\"btn btn-accent\"\r\n            onClick={handleChatSubmit}\r\n            disabled={isLoading}\r\n          >\r\n            {isLoading ? \"Thinking...\" : \"Send\"}\r\n          </button>\r\n\r\n          {/* Displaying response */}\r\n          {chatResponse && (\r\n            <div className=\"mt-4 p-3 border rounded\" style={{ backgroundColor: \"#fff\" }}>\r\n              <strong>JamesGPT:</strong> {chatResponse}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ChatSection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}